
// mutual exclusion [PZ82]
// dxp/gxn 19/12/99

// Number of components: 481
// Max state action pairs in a MEC: 9040
// Max successors per action, in a MEC: 2
// Max successors per action, in model: 2

mdp

// atomic formula
// none in low, high, tie
formula none_lht = 	(p1<4 | p1>13) & (p2<4 | p2>13);
// some in admit
formula some_a	 = 	(p1>=14 & p1<=15) | (p2>=14 & p2<=15);
// some in high, admit
formula some_ha	 = (p1>=4 & p1<=5) | (p1>=10 & p1<=15) | (p2>=4 & p2<=5) | (p2>=10 & p2<=15);
// none in high, tie, admit
formula none_hta = (p1>=0 & p1<=3) | (p1>=7 & p1<=8) | (p2>=0 & p2<=3) | (p2>=7 & p2<=8);
// none in enter
formula none_e	 = 	(p1<2 | p1>3) & (p2<2 | p2>3);

// process 0
module process0

	p0: [0..15] init 1;
	
	[] p0=0 -> (p0'=0);
	[] p0=0 -> (p0'=1);
	[] p0=1 -> (p0'=2);
	[] p0=2 &  (((p1<4 | p1>13) & (p2<4 | p2>13)) | ((p1>=14 & p1<=15) | (p2>=14 & p2<=15))) -> (p0'=3);
	[] p0=2 & !(((p1<4 | p1>13) & (p2<4 | p2>13)) | ((p1>=14 & p1<=15) | (p2>=14 & p2<=15))) -> (p0'=2);
	[] p0=3 -> (p0'=4);
	[] p0=3 -> (p0'=7);
	[] p0=4 &  ((p1>=4 & p1<=5) | (p1>=10 & p1<=15) | (p2>=4 & p2<=5) | (p2>=10 & p2<=15)) -> (p0'=5);
	[] p0=4 & !((p1>=4 & p1<=5) | (p1>=10 & p1<=15) | (p2>=4 & p2<=5) | (p2>=10 & p2<=15)) -> (p0'=10);
	[] p0=5 -> (p0'=6);
	[] p0=6 &  ((p1>=4 & p1<=5) | (p1>=10 & p1<=15) | (p2>=4 & p2<=5) | (p2>=10 & p2<=15)) -> (p0'=6);
	[] p0=6 & !((p1>=4 & p1<=5) | (p1>=10 & p1<=15) | (p2>=4 & p2<=5) | (p2>=10 & p2<=15)) -> (p0'=9);
	[] p0=7 &  ((p1>=0 & p1<=3) | (p1>=7 & p1<=8) | (p2>=0 & p2<=3) | (p2>=7 & p2<=8)) -> (p0'=8);
	[] p0=7 & !((p1>=0 & p1<=3) | (p1>=7 & p1<=8) | (p2>=0 & p2<=3) | (p2>=7 & p2<=8)) -> (p0'=7);
	[] p0=8  -> (p0'=9);
	[] p0=9  -> 0.5 : (p0'=4) + 0.5 : (p0'=7);
	[] p0=10 -> (p0'=11);
	[] p0=11 & ((p1<4 | p1>13) & (p2<4 | p2>13)) -> (p0'=13);
	[] p0=11 & !((p1<4 | p1>13) & (p2<4 | p2>13)) -> (p0'=12);
	[] p0=12 -> (p0'=0);
	[] p0=13 -> (p0'=14);
	[] p0=14 &  ((p1<2 | p1>3) & (p2<2 | p2>3)) -> (p0'=15);
	[] p0=14 & !((p1<2 | p1>3) & (p2<2 | p2>3)) -> (p0'=14);
	[] p0=15 -> (p0'=0);
	
endmodule

// construct further modules through renaming
//	module process1 = process0 [p0=p1, p1=p0] endmodule
// process 1
module process1

	p1: [0..15] init 1;
	
	[] p1=0 -> (p1'=0);
	[] p1=0 -> (p1'=1);
	[] p1=1 -> (p1'=2);
	[] p1=2 &  (((p0<4 | p0>13) & (p2<4 | p2>13)) | ((p0>=14 & p0<=15) | (p2>=14 & p2<=15))) -> (p1'=3);
	[] p1=2 & !(((p0<4 | p0>13) & (p2<4 | p2>13)) | ((p0>=14 & p0<=15) | (p2>=14 & p2<=15))) -> (p1'=2);
	[] p1=3 -> (p1'=4);
	[] p1=3 -> (p1'=7);
	[] p1=4 &  ((p0>=4 & p0<=5) | (p0>=10 & p0<=15) | (p2>=4 & p2<=5) | (p2>=10 & p2<=15)) -> (p1'=5);
	[] p1=4 & !((p0>=4 & p0<=5) | (p0>=10 & p0<=15) | (p2>=4 & p2<=5) | (p2>=10 & p2<=15)) -> (p1'=10);
	[] p1=5 -> (p1'=6);
	[] p1=6 &  ((p0>=4 & p0<=5) | (p0>=10 & p0<=15) | (p2>=4 & p2<=5) | (p2>=10 & p2<=15)) -> (p1'=6);
	[] p1=6 & !((p0>=4 & p0<=5) | (p0>=10 & p0<=15) | (p2>=4 & p2<=5) | (p2>=10 & p2<=15)) -> (p1'=9);
	[] p1=7 &  ((p0>=0 & p0<=3) | (p0>=7 & p0<=8) | (p2>=0 & p2<=3) | (p2>=7 & p2<=8)) -> (p1'=8);
	[] p1=7 & !((p0>=0 & p0<=3) | (p0>=7 & p0<=8) | (p2>=0 & p2<=3) | (p2>=7 & p2<=8)) -> (p1'=7);
	[] p1=8  -> (p1'=9);
	[] p1=9  -> 0.5 : (p1'=4) + 0.5 : (p1'=7);
//	[] p1=10 -> (p1'=11);
//	[] p1=10 -> true;
	[] p1=10 -> (p1'=10);
	[] p1=11 & ((p0<4 | p0>13) & (p2<4 | p2>13)) -> (p1'=13);
	[] p1=11 & !((p0<4 | p0>13) & (p2<4 | p2>13)) -> (p1'=12);
	[] p1=12 -> (p1'=0);
	[] p1=13 -> (p1'=14);
	[] p1=14 &  ((p0<2 | p0>3) & (p2<2 | p2>3)) -> (p1'=15);
	[] p1=14 & !((p0<2 | p0>3) & (p2<2 | p2>3)) -> (p1'=14);
	[] p1=15 -> (p1'=0);
	
endmodule

	
//	module process2 = process0 [p0=p2, p2=p0] endmodule
// process 2
module process2

	p2: [0..15] init 1;
	
	[] p2=0 -> (p2'=0);
	[] p2=0 -> (p2'=1);
	[] p2=1 -> (p2'=2);
	[] p2=2 &  (((p1<4 | p1>13) & (p0<4 | p0>13)) | ((p1>=14 & p1<=15) | (p0>=14 & p0<=15))) -> (p2'=3);
	[] p2=2 & !(((p1<4 | p1>13) & (p0<4 | p0>13)) | ((p1>=14 & p1<=15) | (p0>=14 & p0<=15))) -> (p2'=2);
	[] p2=3 -> (p2'=4);
	[] p2=3 -> (p2'=7);
	[] p2=4 &  ((p1>=4 & p1<=5) | (p1>=10 & p1<=15) | (p0>=4 & p0<=5) | (p0>=10 & p0<=15)) -> (p2'=5);
	[] p2=4 & !((p1>=4 & p1<=5) | (p1>=10 & p1<=15) | (p0>=4 & p0<=5) | (p0>=10 & p0<=15)) -> (p2'=10);
	[] p2=5 -> (p2'=6);
	[] p2=6 &  ((p1>=4 & p1<=5) | (p1>=10 & p1<=15) | (p0>=4 & p0<=5) | (p0>=10 & p0<=15)) -> (p2'=6);
	[] p2=6 & !((p1>=4 & p1<=5) | (p1>=10 & p1<=15) | (p0>=4 & p0<=5) | (p0>=10 & p0<=15)) -> (p2'=9);
	[] p2=7 &  ((p1>=0 & p1<=3) | (p1>=7 & p1<=8) | (p0>=0 & p0<=3) | (p0>=7 & p0<=8)) -> (p2'=8);
	[] p2=7 & !((p1>=0 & p1<=3) | (p1>=7 & p1<=8) | (p0>=0 & p0<=3) | (p0>=7 & p0<=8)) -> (p2'=7);
	[] p2=8  -> (p2'=9);
	[] p2=9  -> 0.5 : (p2'=4) + 0.5 : (p2'=7);
	[] p2=10 -> (p2'=11);
	[] p2=11 & ((p1<4 | p1>13) & (p0<4 | p0>13)) -> (p2'=13);
	[] p2=11 & !((p1<4 | p1>13) & (p0<4 | p0>13)) -> (p2'=12);
	[] p2=12 -> (p2'=0);
	[] p2=13 -> (p2'=14);
	[] p2=14 &  ((p1<2 | p1>3) & (p0<2 | p0>3)) -> (p2'=15);
	[] p2=14 & !((p1<2 | p1>3) & (p0<2 | p0>3)) -> (p2'=14);
	[] p2=15 -> (p2'=0);
	
endmodule



//rewards
//    p1=10: 1;
//endrewards

// "live": Pmax=? [F (p1=10)];
rewards "live"
	p1=10: 1;
endrewards
